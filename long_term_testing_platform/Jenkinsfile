pipeline {
    triggers {
      cron('0 1 * * *')
    }
    agent {
      node {
        label 'Master Vcloud'
      }
    }
    environment {
      LB_ALIAS = 'ios_dev_nightly_testing'
      MOTHERSHIP_CREDS = credentials('63505852-a03d-4db8-b312-8e7f7f493aad')
    }

    stages {
        stage('Pull latest dev') {
          agent { label 'Mothership latest vcloud' }
          steps {
            sh 'docker pull includeos/includeos-common:dev'
          }
        }
        stage('Prepare Starbase') {
          environment {
            ovfToolLocation = '/usr/bin/ovftool'
            VCLOUD_CREDS = credentials('vcloud_jenkins')
          }
          steps {
            // Launch new Starbase in vcloud
            sh '''
              set +x
              export vcloudUsername=$VCLOUD_CREDS_USR
              export vcloudPassword=$VCLOUD_CREDS_PSW
              cd long_term_testing_platform
              $HOME/mothership/mothership-linux-amd64 -T \
               launch --hypervisor vcloud \
               --vcloud-vapp $LB_ALIAS \
               --vcloud-net "IOS-Network" \
               --vcloud-address "vcloud.basefarm.no" \
               --vcloud-org IOS \
               vcloud_starbase_10-20-17-170
            '''
            // Remove old instance from Motheship
            sh '''
              long_term_testing_platform/mothership.sh delete-instance $LB_ALIAS || echo Nothing to delete
            '''
            // Assign alias to newly connected starbase
            sh '''
            cutoff=$(date -d "30 seconds ago" --rfc-3339=seconds)
            sleep 20
            for i in `seq 1 90`; do
              echo Loop number: $i
              ID=$(curl -su "$MOTHERSHIP_CREDS" -X GET "https://mothership.includeos.org:8080/instances" \
              -H  "accept: application/json" | \
                jq -r '.[] | select((.Net[].addr=="10.20.17.170") and(.Online)) | select(.Events[0].Timestamp >= "$cutoff") | .Id')
              if [ ! -z $ID ]; then
                break
              fi
              sleep 1
            done

            echo Now setting alias of $ID
            if [ -z $ID ]; then
              exit 1
            fi
            long_term_testing_platform/mothership.sh instance-alias $ID $LB_ALIAS
            '''
          }
        }
        stage('Deploy microLB') {
            steps {
                sh '''
                  long_term_testing_platform/mothership.sh push-nacl long_term_testing_platform/nacl_vcloud_nightly.txt
                '''
                sh '''
                  long_term_testing_platform/mothership.sh set-includeos-version dev || echo Version already set
                '''
                sh '''
                  nacl_id=$(long_term_testing_platform/mothership.sh nacls | grep nacl_vcloud_nightly | head -n 1 | cut -f 1)
                  image=$(long_term_testing_platform/mothership.sh build --waitAndPrint -n $nacl_id -u vcloud_internal Starbase)
                  long_term_testing_platform/mothership.sh deploy $LB_ALIAS $image
                '''
            }
        }
        stage('Test') {
          parallel {
            stage('Monitor') {
              agent {
                label "worker_openstack"
              }
              steps {
                sh '''
                  docker pull mnordsletten/lotto
                  timeout 60 docker run mnordsletten/lotto \
                    --mHost mothership.includeos.org \
                    --mUser $MOTHERSHIP_CREDS_USR \
                    --mPwd $MOTHERSHIP_CREDS_PSW \
                    $LB_ALIAS 30s
                '''
              }
            }
            stage('Attack') {
              steps {
                sh '''
                   ssh 10.20.10.54 "echo 'GET http://10.20.17.171' | ./vegeta attack -rate 1000 -duration 60s | ./vegeta report -reporter text"
                 '''
              }
            }
          }
        }
    }
}
